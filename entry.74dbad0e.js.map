{"version":3,"sources":["dynamics.ts","events.ts","entry.ts"],"names":[],"mappings":"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","file":"entry.74dbad0e.js","sourceRoot":"../src","sourcesContent":["export class Fluid {\n  // private variables\n  _update: (field: Field) => {};\n  _render: (field: Field) => {};\n  _iterations = 10;\n  dt = 0.1;\n  _densities: number[];\n  _oDensities: number[];\n  _velocitiesX: number[];\n  _oVelocitiesX: number[];\n  _velocitiesY: number[];\n  _oVelocitiesY: number[];\n  _width: number;\n  _height: number;\n  _rowSize: number;\n  _size: number;\n\n  // public/privelaged methods\n  setUpdateCallback(callback) {\n    this._update = callback;\n  }\n  setRenderCallback = function (callback) {\n    this._render = callback;\n  };\n\n  iterations() {\n    return this._iterations;\n  }\n  setIterations(i) {\n    if (0 < i && i <= 100) {\n      this._iterations = i;\n    }\n  }\n\n  setResolution(w, h) {\n    var res = w * h;\n\n    if (\n      !(1 < res && res < 1_000_000) ||\n      this._width === w ||\n      this._height === h\n    ) {\n      throw new Error(`res too high: ${res}`);\n    }\n\n    this._width = w;\n    this._height = h;\n    this._reset();\n  }\n\n  step() {\n    this._queryUI(this._oDensities, this._oVelocitiesX, this._oVelocitiesY);\n\n    this._velocityStep(\n      this._velocitiesX,\n      this._velocitiesY,\n      this._oVelocitiesX,\n      this._oVelocitiesY,\n      this.dt\n    );\n    this._densityStep(\n      this._densities,\n      this._oDensities,\n      this._velocitiesX,\n      this._velocitiesY,\n      this.dt\n    );\n\n    this._render(\n      new Field(\n        this._densities,\n        this._velocitiesX,\n        this._velocitiesY,\n        this._width,\n        this._height,\n        this._rowSize\n      )\n    );\n  }\n\n  // private methods\n  _reset() {\n    this._rowSize = this._width + 2;\n    this._size = (this._width + 2) * (this._height + 2);\n\n    this._densities = new Array(this._size);\n    this._oDensities = new Array(this._size);\n\n    this._velocitiesX = new Array(this._size);\n    this._oVelocitiesX = new Array(this._size);\n\n    this._velocitiesY = new Array(this._size);\n    this._oVelocitiesY = new Array(this._size);\n\n    for (var i = 0; i < this._size; i++) {\n      this._oDensities[i] = this._oVelocitiesX[i] = this._oVelocitiesY[\n        i\n      ] = this._densities[i] = this._velocitiesX[i] = this._velocitiesY[i] = 0;\n    }\n  }\n\n  _queryUI(d, u, v) {\n    for (var i = 0; i < this._size; i++) {\n      d[i] = u[i] = v[i] = 0.0;\n    }\n\n    this._update(new Field(d, u, v, this._width, this._height, this._rowSize));\n  }\n\n  _velocityStep(u, v, u0, v0, dt) {\n    this._addFields(u, u0, dt);\n    this._addFields(v, v0, dt);\n\n    u = [u0, (u0 = u)][0];\n    v = [v0, (v0 = v)][0];\n\n    this._diffuse2(u, u0, v, v0, dt);\n    this._project(u, v, u0, v0);\n\n    u = [u0, (u0 = u)][0];\n    v = [v0, (v0 = v)][0];\n\n    this._advect(1, u, u0, u0, v0, dt);\n    this._advect(2, v, v0, u0, v0, dt);\n\n    this._project(u, v, u0, v0);\n  }\n\n  _densityStep(x, x0, u, v, dt) {\n    this._addFields(x, x0, dt);\n    this._diffuse(0, x0, x, dt);\n    this._advect(0, x, x0, u, v, dt);\n  }\n\n  _addFields(x, s, dt) {\n    for (var i = 0; i < this._size; ++i) {\n      x[i] += dt * s[i];\n    }\n  }\n\n  _linearSolve(b, x, x0, a, c) {\n    var i, j, k, lastRow, currentRow, nextRow, lastX, invC;\n\n    if (a === 0 && c === 1) {\n      for (j = 1; j <= this._height; ++j) {\n        currentRow = j * this._rowSize;\n        ++currentRow;\n        for (i = 0; i < this._width; ++i) {\n          x[currentRow] = x0[currentRow];\n          ++currentRow;\n        }\n      }\n    } else {\n      invC = 1 / c;\n      for (k = 0; k < this._iterations; ++k) {\n        for (j = 1; j <= this._height; ++j) {\n          lastRow = (j - 1) * this._rowSize;\n          currentRow = j * this._rowSize;\n          nextRow = (j + 1) * this._rowSize;\n          lastX = x[currentRow];\n          ++currentRow;\n          for (i = 1; i <= this._width; ++i) {\n            lastX = x[currentRow] =\n              (x0[currentRow] +\n                a * (lastX + x[++currentRow] + x[++lastRow] + x[++nextRow])) *\n              invC;\n          }\n        }\n      }\n    }\n  }\n\n  _diffuse(b, x, x0, dt) {\n    var a = 0;\n    this._linearSolve(b, x, x0, a, 1 + 4 * a);\n  }\n\n  _linearSolve2(x, x0, y, y0, a, c) {\n    var i, j, k, lastRow, currentRow, nextRow, lastX, lastY, invC;\n\n    if (a === 0 && c === 1) {\n      for (j = 1; j <= this._height; ++j) {\n        currentRow = j * this._rowSize;\n        ++currentRow;\n        for (i = 0; i < this._width; ++i) {\n          x[currentRow] = x0[currentRow];\n          y[currentRow] = y0[currentRow];\n          ++currentRow;\n        }\n      }\n    } else {\n      invC = 1 / c;\n      for (k = 0; k < this._iterations; ++k) {\n        for (j = 1; j <= this._height; ++j) {\n          lastRow = (j - 1) * this._rowSize;\n          currentRow = j * this._rowSize;\n          nextRow = (j + 1) * this._rowSize;\n          lastX = x[currentRow];\n          lastY = y[currentRow];\n          ++currentRow;\n          for (i = 1; i <= this._width; ++i) {\n            lastX = x[currentRow] =\n              (x0[currentRow] +\n                a * (lastX + x[currentRow] + x[lastRow] + x[nextRow])) *\n              invC;\n            lastY = y[currentRow] =\n              (y0[currentRow] +\n                a * (lastY + y[++currentRow] + y[++lastRow] + y[++nextRow])) *\n              invC;\n          }\n        }\n      }\n    }\n  }\n\n  _diffuse2(x, x0, y, y0, dt) {\n    var a = 0;\n    this._linearSolve2(x, x0, y, y0, a, 1 + 4 * a);\n  }\n\n  _advect(b, d, d0, u, v, dt) {\n    var i, j, pos, x, y, i0, i1, j0, j1, s0, s1, t0, t1, row1, row2;\n\n    var Wdt0 = dt * this._width;\n    var Hdt0 = dt * this._height;\n    var Wp5 = this._width + 0.5;\n    var Hp5 = this._height + 0.5;\n\n    for (j = 1; j <= this._height; ++j) {\n      pos = j * this._rowSize;\n      for (i = 1; i <= this._width; ++i) {\n        x = i - Wdt0 * u[++pos];\n        y = j - Hdt0 * v[pos];\n\n        if (x < 0.5) {\n          x = 0.5;\n        } else if (x > Wp5) {\n          x = Wp5;\n        }\n\n        i0 = x | 0;\n        i1 = i0 + 1;\n\n        if (y < 0.5) {\n          y = 0.5;\n        } else if (y > Hp5) {\n          y = Hp5;\n        }\n\n        j0 = y | 0;\n        j1 = j0 + 1;\n\n        s1 = x - i0;\n        s0 = 1 - s1;\n\n        t1 = y - j0;\n        t0 = 1 - t1;\n\n        row1 = j0 * this._rowSize;\n        row2 = j1 * this._rowSize;\n\n        d[pos] =\n          s0 * (t0 * d0[i0 + row1] + t1 * d0[i0 + row2]) +\n          s1 * (t0 * d0[i1 + row1] + t1 * d0[i1 + row2]);\n      }\n    }\n  }\n\n  _project(u, v, p, div) {\n    var i,\n      j,\n      prevRow,\n      currentRow,\n      nextRow,\n      prevValue,\n      nextValue,\n      prevPos,\n      currentPos,\n      nextPos;\n\n    var h = -0.5 / Math.sqrt(this._width * this._height);\n\n    for (j = 1; j <= this._height; ++j) {\n      prevRow = (j - 1) * this._rowSize;\n      currentRow = j * this._rowSize;\n      nextRow = (j + 1) * this._rowSize;\n\n      prevValue = currentRow - 1;\n      nextValue = currentRow + 1;\n\n      for (i = 1; i <= this._width; ++i) {\n        div[++currentRow] =\n          h * (u[++nextValue] - u[++prevValue] + v[++nextRow] - v[++prevRow]);\n        p[currentRow] = 0;\n      }\n    }\n\n    this._linearSolve(0, p, div, 1, 4);\n\n    var halfWidth = 0.5 * this._width,\n      halfHeight = 0.5 * this._height;\n\n    for (j = 1; j <= this._height; ++j) {\n      prevPos = j * this._rowSize - 1;\n      currentPos = j * this._rowSize;\n      nextPos = j * this._rowSize + 1;\n\n      prevRow = (j - 1) * this._rowSize;\n      currentRow = j * this._rowSize;\n      nextRow = (j + 1) * this._rowSize;\n\n      for (i = 1; i <= this._width; ++i) {\n        u[++currentPos] -= halfWidth * (p[++nextPos] - p[++prevPos]);\n        v[currentPos] -= halfHeight * (p[++nextRow] - p[++prevRow]);\n      }\n    }\n  }\n}\n\n/**\n * This is a private constructor that's used to pass state from the UI, and to the renderer.\n * @param {Array} densities   An array of all the densities in the field.\n * @param {Array} velocitiesX An array of all the x velocities in the field.\n * @param {Array} velocitiesY An array of all the y velocities in the field.\n */\nclass Field {\n  constructor(\n    private _densities: number[],\n    private _velocitiesX: number[],\n    private _velocitiesY: number[],\n    private _width: number,\n    private _height: number,\n    private _rowSize: number\n  ) {}\n  // Just exposing the fields here rather than using accessors is a\n  // measurable win during display (maybe 5%) but makes the code ugly.\n\n  // function key(x, y) { return (x + 1) + (y + 1) * _rowSize; } // The original way.\n  key(x, y) {\n    return x + 1 + (y + 1) * this._rowSize;\n  } // The way that works.\n\n  setDensity(x, y, density) {\n    this._densities[this.key(x, y)] = density;\n  }\n\n  getDensity(x, y) {\n    return this._densities[this.key(x, y)];\n  }\n\n  // this.setVelocity = function(x, y, xv, yv) { // The original way.\n  setVelocity(x, y, velocityX, velocityY) {\n    // The way that works.\n    this._velocitiesX[this.key(x, y)] = velocityX;\n    this._velocitiesY[this.key(x, y)] = velocityY;\n  }\n\n  getXVelocity(x, y) {\n    return this._velocitiesX[this.key(x, y)];\n  }\n\n  getYVelocity(x, y) {\n    return this._velocitiesY[this.key(x, y)];\n  }\n\n  width() {\n    return this._width;\n  }\n  height() {\n    return this._height;\n  }\n}\n","interface Listener<K extends keyof HTMLElementEventMap> extends EventListener {\n  (event: HTMLElementEventMap[K]): void;\n}\n\nexport const on = <\n  T extends EventTarget,\n  U extends keyof HTMLElementEventMap,\n  V extends AddEventListenerOptions\n>(\n  target: T,\n  event: U,\n  listener: Listener<U>,\n  options?: V | boolean\n): void => target.addEventListener(event, listener, options);\n\nexport const off = <\n  T extends EventTarget,\n  U extends keyof HTMLElementEventMap,\n  V extends EventListenerOptions\n>(\n  target: T,\n  event: U,\n  listener: Listener<U>,\n  options?: V | boolean\n): void => target.removeEventListener(event, listener, options);\n","import { Fluid } from \"./dynamics\";\nimport { on } from \"./events\";\n\nconst { hypot, max } = Math;\nconst { innerWidth: w, innerHeight: h, requestAnimationFrame: raf } = window;\n\nconst debug = document.querySelector(\"pre\") as HTMLPreElement;\nconst canvas = document.querySelector(\"canvas\") as HTMLCanvasElement;\nconst canvasContext = canvas.getContext(\"2d\")!;\n\ncanvas.width = w;\ncanvas.height = h;\n\nconst buffer = canvas.cloneNode() as HTMLCanvasElement;\nconst bufferContext = buffer.getContext(\"2d\")!;\nconst bufferImageData = bufferContext.createImageData(w, h);\nconst { data: bufferData } = bufferImageData;\n\n// const pixel = (x: number, y: number) => y * w * 4 + x * 4;\n\nlet input = { x: 0, y: 0, dx: 0, dy: 0, ox: 0, oy: 0, len: 0 };\n\non(window, \"mousemove\", (event) => {\n  if (!event.buttons) {\n    input = { x: 0, y: 0, dx: 0, dy: 0, ox: 0, oy: 0, len: 0 };\n    return;\n  }\n\n  const { clientX: x, clientY: y, movementX: dx, movementY: dy } = event;\n  const [ox, oy, len] = [x - dx, y - dy, max(1, (hypot(dx, dy) + 0.5) | 0)];\n\n  input = { x, y, dx, dy, ox, oy, len };\n});\n\nconst fluid = new Fluid();\nfluid.setUpdateCallback((f) => {\n  for (let i = 0; i < input.len; ++i) {\n    const px = (input.ox + input.dx * (i / input.len)) | 0;\n    const py = (input.oy + input.dy * (i / input.len)) | 0;\n\n    f.setVelocity(px, py, input.dx, input.dy);\n    f.setDensity(px, py, 25);\n  }\n});\nfluid.setRenderCallback((f) => {\n  bufferData.fill(0);\n\n  for (let x = 0; x < w; ++x) {\n    for (let y = 0; y < h; ++y) {\n      bufferData[4 * (y * w + x) + 3] = f.getDensity(x, y) * 255;\n    }\n  }\n\n  bufferContext.putImageData(bufferImageData, 0, 0);\n  canvasContext.drawImage(buffer, 0, 0);\n});\nfluid.setResolution(w, h);\n\nconst tick = (t: DOMHighResTimeStamp) => {\n  raf(tick);\n\n  canvasContext.fillStyle = `hsl(${(t / 100) % 360}, 50%, 90%)`;\n  canvasContext.fillRect(0, 0, w, h);\n\n  fluid.step();\n\n  debug.innerText = JSON.stringify({}, null, 2);\n};\n\nraf(tick);\n"]}